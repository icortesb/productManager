paths:
  /api/users/getRoles:
    get:
      summary: Obtiene todos los roles de usuario
      description: Obtiene los roles de usuario disponibles desde el schema
      operationId: getRoles
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/users/premium/{uid}:
    put:
      summary: Actualiza el rol del usuario
      description: Recibe el ID de usuario y actualiza su rol segun el body
      operationId: updateRole
      tags:
        - users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: Rol de usuario
                  example: "premium"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID autogenerado de Mongo
        title:
          type: string
          description: Nombre del producto
          unique: true
          required: true
        description:
          type: string
          description: Descripción del producto
          required: true
        category:
          type: string
          description: Categoría del producto
          required: true
          enum:
            - Monitores
            - Periféricos
            - Procesadores
            - Memorias RAM
            - Almacenamiento
            - Placas de video
            - Laptops
        price:
          type: number
          description: Precio del producto
          required: true
        thumbnails:
          type: array
          description: Imágenes del producto
          items:
            type: string
        code:
          type: string
          description: Código del producto
          required: true
        stock:
          type: string
          description: Stock del producto
          required: true
        status:
          type: boolean
          description: Estado del producto
          default: true
        owner:
          type: mongoose.Schema.Types.ObjectId
          description: ID del usuario dueño del producto
          ref: 'User'
          default: 'admin'
      example:
        title: Monitor 24"
        description: Monitor de 24 pulgadas
        category: Monitores
        price: 20000
        thumbnails:
          - https://www.example.com/image1.jpg
          - https://www.example.com/image2.jpg
        code: MON24
        stock: 10
        status: true
        owner: 60b6b1b3b3b3b3b3b3b3b3b3
    Cart:
      type: object
      properties:
        date:
          type: date
          description: Fecha de creación del carrito
          required: true
        products:
          type: array
          description: Productos del carrito
          items:
            type: object
            description: Producto del carrito
            properties:
              product:
                type: mongoose.Schema.Types.ObjectId
                description: ID del producto
                ref: 'products'
              quantity:
                type: number
                description: Cantidad del producto
                default: 1
      example:
        date: 2021-06-01
        products:
          - product: 60b6b1b3b3b3b3b3b3b3b3b3
            quantity: 2
          - product: 60b6b1b3b3b3b3b3b3b3b4
            quantity: 1